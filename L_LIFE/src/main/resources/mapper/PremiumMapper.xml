<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kosa.com.suntofu.L_LIFE.premium.dao.PremiumDao">
    <!-- 프리미엄 상품 리스트 -->
    <select id="selectPremiumProductList" resultType="PremiumVo">
        SELECT lf.lf_id, lf.lf_img_main, lfb.lf_brand_name, lf.lf_name, lf.lf_pr_price
        FROM LLifeFurniture lf
        JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        WHERE lf_sub_type = 1
        OFFSET #{offset} ROWS FETCH NEXT 20 ROWS ONLY
    </select>

    <!-- pagination 전체 상품 개수 구하기 -->
    <select id="selectProductCountPagination" resultType="_int">
        SELECT count(*)
        FROM LLifeFurniture lf
        JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        WHERE lf_sub_type = 1
    </select>

    <!-- 프리미엄 상품 카테고리 필터링 -->
    <select id="selectProductByCategory" parameterType="PaginationVo" resultType="PremiumVo">
        SELECT lf.lf_id, lf.lf_img_main, lfb.lf_brand_name, lf.lf_name, lf.lf_pr_price
        FROM LLifeFurniture lf
        JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        JOIN LFurnitureCategory lfc
        ON lf.lf_category_id = lfc.lf_category_id
        WHERE lf_sub_type = 1
        AND lfc.lf_category_id = #{lfCategoryId}
        OFFSET #{offset} ROWS FETCH NEXT 20 ROWS ONLY
    </select>

    <select id="selectProductCountByCategoryByPagination" parameterType="PaginationVo" resultType="_int">
        SELECT count(*)
        FROM LLifeFurniture lf
        JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        JOIN LFurnitureCategory lfc
        ON lf.lf_category_id = lfc.lf_category_id
        WHERE lf_sub_type = 1
        AND lfc.lf_category_id = #{lfCategoryId}
    </select>

    <!-- 프리미엄 상품 검색 -->
    <select id="selectProductByKeyword" parameterType="PaginationVo" resultType="PremiumVo">
        SELECT lf.lf_id, lf.lf_img_main, lfb.lf_brand_name, lf.lf_name, lf.lf_pr_price
        FROM LLifeFurniture lf
        JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        WHERE lf_sub_type = 1
        AND (UPPER(lfb.lf_brand_name) LIKE '%' || UPPER(#{keyword}) || '%'
        OR UPPER(lf.lf_name) LIKE '%' || UPPER(#{keyword}) || '%')
        OFFSET #{offset} ROWS FETCH NEXT 20 ROWS ONLY
    </select>

    <select id="selectProductByKeywordPagination" parameterType="PaginationVo" resultType="_int">
        SELECT count(*)
        FROM LLifeFurniture lf
        JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        WHERE lf_sub_type = 1
        AND
        (UPPER(lfb.lf_brand_name) LIKE '%' || UPPER(#{keyword}) || '%'
        OR UPPER(lf.lf_name) LIKE '%' || UPPER(#{keyword}) || '%')
    </select>

    <select id="selectProductByFilter" parameterType="PaginationVo" resultType="PremiumVo">
        SELECT lf.lf_id, lf.lf_img_main, lfb.lf_brand_name, lf.lf_name, lf.lf_pr_price, lfb.lf_brand_id
        FROM LLifeFurniture lf
        JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        JOIN LFurnitureMood lfm
        ON lf.lf_mood_id = lfm.lf_mood_id
        WHERE lf.lf_sub_type = 1
        <!-- 브랜드 조건 -->
        <if test="lfBrandIds != null and lfBrandIds.size() > 0">
            AND lfb.lf_brand_id IN
            <foreach collection="lfBrandIds" item="brandId" open="(" separator="," close=")">
                #{brandId}
            </foreach>
        </if>
        <!-- 분위기 조건 -->
        <if test="lfMoodIds != null and lfMoodIds.size() > 0">
            AND lfm.lf_mood_id IN
            <foreach collection="lfMoodIds" item="moodId" open="(" separator="," close=")">
                #{moodId}
            </foreach>
        </if>
        <!-- 가격 조건 -->
        <if test="minPrice != null and maxPrice != null">
            AND lf.lf_pr_price BETWEEN #{minPrice} AND #{maxPrice}
        </if>
        OFFSET #{offset} ROWS FETCH NEXT 20 ROWS ONLY
    </select>

    <!-- 프리미엄 상품 상세 -->
    <resultMap id="PremiumDetailResultMap" type="PremiumVo">
        <id property="lfId" column="lf_id" />
        <result property="lfSubType" column="lf_sub_type" />
        <result property="lfPrPrice" column="lf_pr_price" />
        <result property="mId" column="M_ID" />
        <result property="mName" column="M_NAME" />
        <result property="lfName" column="lf_name" />
        <result property="lfImgMain" column="lf_img_main" />
        <result property="lfBrandName" column="lf_brand_name" />
        <result property="lfPrMinPeriod" column="lf_pr_min_period" />
        <collection property="detailImgUrl" ofType="PremiumDetailImgVo">
            <id property="lfImgId" column="lf_img_id" />
            <result property="lfImgUrl" column="lf_img_url" />
            <result property="imgComment" column="img_comment" />
        </collection>
    </resultMap>

    <select id="selectPremiumProductDetailById" resultMap="PremiumDetailResultMap">
        SELECT lf.lf_id, lf.lf_img_main, lfb.lf_brand_name, lf.lf_name, lf.lf_pr_price, lf.lf_pr_min_period,
               lfImg.lf_img_id, lfImg.lf_img_url, lfImg.img_comment
        FROM LLifeFurniture lf
        LEFT JOIN LFurnitureBrand lfb
        ON lf.lf_brand_id = lfb.lf_brand_id
        JOIN LfurnitureImage lfImg
        ON lf.lf_id = lfImg.lf_id
        WHERE lf_sub_type = 1
        AND lf.lf_id = #{lfId}
    </select>

    <!-- 프리미엄 상품 옵션 -->
    <select id="selectPremiumOptionById" parameterType="PremiumOptionVo" resultType="PremiumOptionVo">
        SELECT s.lf_id, s.stock_amount, lfo.lf_opt_id, lfo.lf_opt_name
        FROM Stock s
        JOIN LFurnitureOption lfo
        ON s.lf_opt_id = lfo.lf_opt_id
        WHERE s.lf_id = #{lfId}
    </select>

    <!-- 프리미엄 상품 재입고 알림 신청 -->
    <select id="selectPremiumStockAmount" parameterType="PremiumOptionVo" resultType="PremiumOptionVo">
        SELECT s.lf_opt_id, s.lf_id, s.stock_amount
        FROM Stock s
        WHERE s.lf_opt_id = #{lfOptId}
        AND s.lf_id = #{lfId}
    </select>

    <!-- 재입고 알림 신청 시 예약 테이블에 insert -->
    <insert id="insertOptionToReservation" parameterType="PremiumOptionVo">
        INSERT INTO reservation (m_id, lf_id, lf_opt_id)
        VALUES (#{mId}, #{lfId}, #{lfOptId})
    </insert>

    <!-- 장바구니에 상품 넣기 -->
    <insert id="insertPremiumProductToCart" parameterType="CartItemVo">
        {CALL
            DECLARE
            v_member_id NUMBER :=0;
            BEGIN
                SELECT count(SUBSCRIPTION.m_id)
                INTO v_member_id
                FROM SUBSCRIPTION
                where m_id = #{mId} and subscribe_type=1 and subscribe_status=1;

            IF v_member_id > 0 THEN
                INSERT INTO CART (lf_id, m_id, lf_opt_id, total_price)
                VALUES (#{lfId}, #{mId}, #{lfOptId},#{totalPrice});
            ELSE
                RAISE_APPLICATION_ERROR(-20002, 'No subscription found for the user');
            END IF;
            END
            }
    </insert>

    <!-- 프리미엄 비슷한 가격대의 상품 추천 -->
    <select id="selectPremiumRecommendation" parameterType="PremiumVo" resultType="PremiumVo">
        <![CDATA[
        SELECT lf.lf_id, lf.lf_img_main, lfb.lf_brand_name, lf.lf_name, lf.lf_pr_price
        FROM LLIFEFURNITURE lf
        JOIN LFURNITUREBRAND lfb
        ON lf.LF_BRAND_ID = lfb.LF_BRAND_ID
        WHERE lf_sub_type = 1
        AND lf.lf_pr_price >= #{lfPrPrice}*0.8
        AND lf.lf_pr_price <= #{lfPrPrice}*1.2
        AND lf.lf_id != #{lfId}
        ]]>
    </select>

    <!-- 프리미엄 패키지 라인 -->
    <select id="selectMDPickPackages" resultType="PackageVo">
        select *
        from LFPACKAGE
        where LF_PACKAGE_TYPE =1 and IS_MD_PICK=1
    </select>

    <select id="selectPromotionPackages" resultType="PackageVo">
        select *
        from LFPACKAGE
        where LF_PACKAGE_TYPE =1 and IS_PROMOTION=1
    </select>

    <select id="selectRecommendationPackages" resultType="PackageVo">
        select *
        from LFPACKAGE
        where LF_PACKAGE_TYPE =1 and IS_PROMOTION=0 and IS_MD_PICK =0
    </select>

    <resultMap id="packageDetail" type="PackageDetailVo">
            <id property="lfPackageId" column="LF_PACKAGE_ID"/>
            <result property="lfPackageName" column="LF_PACKAGE_NAME"/>
            <result property="lfPackageType" column="LF_PACKAGE_TYPE"/>
            <result property="lfPackageImg" column="LF_PACKAGE_IMG"/>
            <collection property="lfPackageProducts" ofType="PremiumVo">
                <id property="lfId" column="lf_id"/>
                <result property="lfName" column="lf_name"/>
                <result property="lfSubType" column="lf_sub_type"/>
                <result property="lfBrandName" column="lf_brand_name"/>
                <result property="lfName" column="lf_name"/>
                <result property="lfImgMain" column="lf_img_main"/>
                <result property="lfPrPrice" column="lf_pr_price"/>
                <result property="lfPrMinPeriod" column="lf_pr_min_peroid"/>
            </collection>
    </resultMap>

    <select id="selectPackageDetail" parameterType="int" resultMap="packageDetail">
        select *
        from LFPACKAGE lfp
         left join LFPACKAGECATALOG lfc
                   on lfp.LF_PACKAGE_ID = lfc.LF_PACKAGE_ID
         left Join LLIFEFURNITURE f
                   on lfc.LF_ID = f.LF_ID
        left join LFURNITUREBRAND fb
                    on f.lf_brand_id = fb.lf_brand_id
        where lfp.LF_PACKAGE_ID = #{lfPackageId}
    </select>

    <!-- 리뷰 관련 -->
    <insert id="insertReview" useGeneratedKeys="false" parameterType="ReviewRequestVo" >
        insert into review(lf_review_title, lf_review_content, m_id, lf_id, lf_review_rating, lf_review_ser_rating, lf_review_del_rating)
        values(#{lfReviewTitle}, #{lfReviewContent}, #{mId}, #{lfId}, #{lfReviewRating},#{lfReviewSerRating},#{lfReviewDelRating})

        <selectKey keyProperty="lfReviewId" resultType="int" order="AFTER">
            SELECT lf_review_id FROM review WHERE m_id = #{mId} and lf_id = #{lfId}
        </selectKey>
    </insert>

    <insert id="insertReviewImg">
        <selectKey keyProperty="maxSeq" resultType="int" order="BEFORE">
            SELECT NVL(MAX(r_img_id), 0) FROM reviewImage
        </selectKey>
        INSERT INTO reviewImage (r_img_id, r_img_url, lf_review_id)
        <foreach collection="list" item="item" index="idx" separator="UNION ALL">
            SELECT #{maxSeq} + #{idx} +1, #{item.rImgUrl}, #{item.lfReviewId} FROM DUAL
        </foreach>
    </insert>


    <select id="selectAllReviews" resultMap="ReviewWithImages">
        SELECT
            r.LF_REVIEW_ID,
            r.LF_REVIEW_TITLE,
            r.LF_REVIEW_CONTENT,
            r.M_ID,
            m.M_NAME,
            r.LF_REVIEW_TYPE,
            r.LF_REVIEW_DATE,
            r.LF_ID,
            r.LF_REVIEW_RATING,
            r.LF_REVIEW_SER_RATING,
            r.LF_REVIEW_DEL_RATING,
            i.R_IMG_ID,
            i.R_IMG_URL
        FROM REVIEW r
                 LEFT JOIN REVIEWIMAGE i ON r.LF_REVIEW_ID = i.LF_REVIEW_ID
                 LEFT JOIN MEMBER m ON r.M_ID = m.M_ID
        WHERE r.LF_ID = #{lfId}
        ORDER BY r.LF_REVIEW_DATE DESC, i.R_IMG_ID
    </select>

    <!-- 리뷰와 이미지를 매핑하는 resultMap -->
    <resultMap id="ReviewWithImages" type="ReviewVo">
        <id property="lfReviewId" column="LF_REVIEW_ID" />
        <result property="lfReviewTitle" column="LF_REVIEW_TITLE" />
        <result property="lfReviewContent" column="LF_REVIEW_CONTENT" />
        <result property="mId" column="M_ID" />
        <result property="mName" column="M_NAME" />
        <result property="lfReviewType" column="LF_REVIEW_TYPE" />
        <result property="lfReviewDate" column="LF_REVIEW_DATE" />
        <result property="lfId" column="LF_ID" />
        <result property="lfReviewRating" column="LF_REVIEW_RATING" />
        <result property="lfReviewSerRating" column="LF_REVIEW_SER_RATING" />
        <result property="lfReviewDelRating" column="LF_REVIEW_DEL_RATING" />
        <collection property="lfReviewImgs" ofType="ReviewImgVo">
            <id property="rImgId" column="R_IMG_ID" />
            <result property="rImgUrl" column="R_IMG_URL" />
        </collection>
    </resultMap>


    <!-- 리뷰 아이디로 가져오기 -->
    <select id="selectReviewById" resultMap="ReviewWithImages">
        SELECT
            r.LF_REVIEW_ID,
            r.LF_REVIEW_TITLE,
            r.LF_REVIEW_CONTENT,
            r.M_ID,
            m.M_NAME,
            r.LF_REVIEW_TYPE,
            r.LF_REVIEW_DATE,
            r.LF_ID,
            r.LF_REVIEW_RATING,
            r.LF_REVIEW_SER_RATING,
            r.LF_REVIEW_DEL_RATING,
            i.R_IMG_ID,
            i.R_IMG_URL
        FROM REVIEW r
                 LEFT JOIN REVIEWIMAGE i ON r.LF_REVIEW_ID = i.LF_REVIEW_ID
                 LEFT JOIN MEMBER m ON r.M_ID = m.M_ID
        WHERE r.LF_REVIEW_ID = #{lfReviewId}
        ORDER BY r.LF_REVIEW_DATE DESC, i.R_IMG_ID

    </select>
    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        delete from REVIEW where lf_review_id =#{lfReviewId}
    </delete>
</mapper>